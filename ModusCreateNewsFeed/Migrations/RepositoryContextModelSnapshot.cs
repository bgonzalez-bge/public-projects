// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModusCreateNewsFeed.Models.DB;

namespace ModusCreateNewsFeed.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.Feed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<int>("FeedCategoryId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FeedCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Feeds");

                    b.HasData(
                        new { Id = 1, Description = "Follow us to keep up with the news on Football, Golf, Rugby, Cricket, Tennis, F1, Boxing and more from Sky Sports", FeedCategoryId = 1, Title = "SkySports", URL = "https://www.skysports.com/rss/12040" },
                        new { Id = 2, Description = "The latest sports news, video, analysis, scores and better info. Covering the NFL, MLB, NBA, NHL, NASCAR, college football and basketball, soccer and more.", FeedCategoryId = 1, Title = "Sporting News", URL = "http://www.sportingnews.com/us/rss" },
                        new { Id = 3, Description = "Realtime rumors, news and gossip from thousands of sports blogs ", FeedCategoryId = 1, Title = "Yardbarker", URL = "https://www.yardbarker.com/rss/rumors" },
                        new { Id = 4, Description = "Covering the greatest heroes of the big and small screen ranging from comic book legends to iconic characters in cinema. ", FeedCategoryId = 2, Title = "Heroic Hollywood", URL = "https://heroichollywood.com/feed" },
                        new { Id = 5, Description = "Deadline.com is always the first to break up-to-the-minute entertainment, Hollywood and media news, with an unfiltered, no-holds-barred analysis of events. The site is the go-to source for breaking news about the business of TV, film, media and other entertainment ", FeedCategoryId = 2, Title = "Deadline", URL = "https://deadline.com/feed/" },
                        new { Id = 6, Description = "The Black Hollywood Education and Resource Center, a nonprofit, public benefit organization, is designed to advocate, educate, research, develop, and preserve the history, and the future, of blacks in the film and television industries.", FeedCategoryId = 2, Title = "Black Hollywood", URL = "https://bherc.org/feed" },
                        new { Id = 7, Description = "News, opinion and multimedia on politics and government.", FeedCategoryId = 3, Title = "The New York Times", URL = "https://rss.nytimes.com/services/xml/rss/nyt/Politics.xml" },
                        new { Id = 8, Description = "Essential political coverage from California and the presidential campaign, including in-depth commentary, analysis and election results.", FeedCategoryId = 3, Title = "Los Angeles Times", URL = "https://www.latimes.com/politics/rss2.0.xml" }
                    );
                });

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.FeedCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FeedCategories");

                    b.HasData(
                        new { Id = 1, Description = "Sports" },
                        new { Id = 2, Description = "Entertainment" },
                        new { Id = 3, Description = "Politics" },
                        new { Id = 4, Description = "My feeds" }
                    );
                });

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.Subcription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeedId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FeedId");

                    b.HasIndex("UserId");

                    b.ToTable("Subcriptions");

                    b.HasData(
                        new { Id = 1, FeedId = 1, UserId = 1 },
                        new { Id = 2, FeedId = 4, UserId = 1 },
                        new { Id = 3, FeedId = 7, UserId = 1 }
                    );
                });

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Name = "ModusCreate", Password = "ModusCreate" }
                    );
                });

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.Feed", b =>
                {
                    b.HasOne("ModusCreateNewsFeed.Models.DB.FeedCategory", "FeedCategory")
                        .WithMany("Feeds")
                        .HasForeignKey("FeedCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModusCreateNewsFeed.Models.DB.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ModusCreateNewsFeed.Models.DB.Subcription", b =>
                {
                    b.HasOne("ModusCreateNewsFeed.Models.DB.Feed", "Feed")
                        .WithMany("Subcriptions")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModusCreateNewsFeed.Models.DB.User", "User")
                        .WithMany("Subcriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
